#Goal: to plot the ROC curve with python scikit learn; plots mean with standard deviation

import numpy as np
from igraph import *
import pandas as pd
import sys
import os
os.environ['KMP_DUPLICATE_LIB_OK']='True'

#-----load your ontology onto HiView-------------------------------------------------------------------------
#code for uploading to HiView taken from DDOT package: https://github.com/michaelkyu/ddot/blob/master/examples/Tutorial.ipynb


import networkx as nx

import matplotlib
matplotlib.use("TKAgg")
from matplotlib import pyplot as plt

import seaborn as sns; sns.set()

import pylab

#construct the random forest so that when doing the 5X cross validation, the model is not seeing 20% of the genes, not just rows--------------------
import random
import pickle
#from define_gene_objects_rf_5 import PairOfGenes

from sklearn.metrics import auc
from itertools import combinations
from collections import defaultdict

from sklearn.metrics import roc_curve
from sklearn.metrics import roc_auc_score

feature_list = ['colon_hpa_isoform_exp', 'ovary_hpa_isoform_exp', 'breast_hpa_isoform_exp', 'lung_hpa_isoform_exp', 'salivary gland_hpa_isoform_exp', 'seminal vesicle_hpa_isoform_exp', 
		'lymph node_hpa_isoform_exp', 'placenta_hpa_isoform_exp', 'kidney_hpa_isoform_exp', 'cervix, uterine_hpa_isoform_exp', 'adrenal gland_hpa_isoform_exp', 'thyroid gland_hpa_isoform_exp', 
		'stomach 1_hpa_isoform_exp', 'gallbladder_hpa_isoform_exp', 'duodenum_hpa_isoform_exp', 'fallopian tube_hpa_isoform_exp','endometrium 1_hpa_isoform_exp', 'skin 1_hpa_isoform_exp', 
		'spleen_hpa_isoform_exp', 'gtex_no_brain_exp', 'appendix_hpa_isoform_exp', 'heart muscle_hpa_isoform_exp', 'small intestine_hpa_isoform_exp', 'epididymis_hpa_isoform_exp', 'testis_hpa_isoform_exp', 
		'liver_hpa_isoform_exp', 'esophagus_hpa_isoform_exp', 'urinary bladder_hpa_isoform_exp', 'skeletal muscle_hpa_isoform_exp', 'tonsil_hpa_isoform_exp', 'prostate_hpa_isoform_exp', 
		'parathyroid gland_hpa_isoform_exp','adipose tissue_hpa_isoform_exp', 'smooth muscle_hpa_isoform_exp', 'rectum_hpa_isoform_exp', 'bone marrow_hpa_isoform_exp', 
		'chr_no_source_feature', 'qPhos_site_number','Phosphosite_hu_no', 'pFAM_domain_number', 'pFAM_domain', 'protein_mass', 'Ensembl_aa_length', 'Ensembl_isoform_no', 
		'trans_count', 'gc_content', 'trans_len', 'gene_length', 'exon_no', 'cds_length']


feature_importance_0=[0.016626532995328628, 0.017390259351923242, 0.021348021151750447, 0.019261061527088928, 0.0222644981959946, 0.019077171273840902, 0.01629157036190714, 0.018026179393588627, 0.018074370247540942, 0.01481466991441623, 0.017910425134967888, 0.01825179831910667, 0.017100724684791943, 0.01622440067201588, 0.017226236091959456, 0.013967011793659884, 0.03989002624013823, 0.018090296717507066, 0.017414996625181832, 0.035582883390101044, 0.018895748134057234, 0.017914776453682505, 0.018494159549345433, 0.020576094169310295, 0.01951498673668631, 0.017401130024169046, 0.016653005588389388, 0.017925265310827644, 0.018495463228557104, 0.020570245510251533, 0.015274440826657416, 0.02199837444490488, 0.01879141876596885, 0.01668327477727353, 0.018293027832466086, 0.021261570034233023, 0.0012893744263639437, 0.017755892362529238, 0.026367696334247778, 0.010968214390510524, 0.02565385533379818, 0.02486033871760124, 0.023955213683107233, 0.02611197846438129, 0.01808470576989243, 0.028793767291882325, 0.024349835457664157, 0.036568605115811545, 0.02267919551865078, 0.018985211663969433]

feature_importance_1=[0.01729254487942749, 0.015928740237530416, 0.01752362786873834, 0.018872043890010574, 0.020086269834434914, 0.0172271900549087, 0.0170440211955397, 0.016577156646492088, 0.016663839713879417, 0.01703627568440833, 0.016668833572063106, 0.017414015437683682, 0.015579824740287523, 0.01613712100802085, 0.017991124220158073, 0.015198996326657777, 0.019658884477395947, 0.01898009288155387, 0.01576985827051675, 0.03493420502286901, 0.03325488915405468, 0.018533732519969013, 0.016238768370719966, 0.02258262475722057, 0.019108350967529483, 0.02104971667026217, 0.017067756815893197, 0.01682065287241992, 0.02019385919933635, 0.020576660419428485, 0.015136176261757096, 0.021016841861158386, 0.018905879429384483, 0.01868378700902294, 0.01786210083417816, 0.02140856679974396, 0.0011800370392186016, 0.020541350668585735, 0.025748135724889938, 0.01639883075823312, 0.027304082564920736, 0.026907496708028986, 0.024736445863935908, 0.01631890922453423, 0.018515298152247707, 0.031360726615161885, 0.026016800128715732, 0.04088387967177425, 0.022905597464229967, 0.020157379510867796]

feature_importance_2=[0.017668393593176714, 0.016825609273614824, 0.019546690716814603, 0.016681785815891605, 0.021467912714438087, 0.016928398274183833, 0.017301554301680733, 0.017736264531100037, 0.017815600372644746, 0.01585476077576747, 0.017300355467574653, 0.017721170340526827, 0.03220300933775586, 0.016641866912709774, 0.01836406098261838, 0.01533824098962754, 0.015033945012284024, 0.01918793809621385, 0.01645255881974031, 0.034005205115541046, 0.01852873165076644, 0.019255809011514323, 0.019713820299357646, 0.01945902805299893, 0.020111755154305837, 0.019391083256504283, 0.017423331777592494, 0.0165761763844624, 0.019403189242130928, 0.018095324720577403, 0.014605034696617582, 0.019498673911177447, 0.018223061141417404, 0.015741025706285945, 0.016647657257364695, 0.020951782375105532, 0.001238049519242113, 0.021884866916361885, 0.02080491505833455, 0.016392984586095508, 0.02726097214859823, 0.028259737013153905, 0.022888657661846418, 0.023354518745634364, 0.017921472907458536, 0.033466015299734614, 0.02575616953336132, 0.04428124242057062, 0.022200636762477643, 0.02058895534504606]

feature_importance_3 =[0.01794697788709072, 0.016235844566033726, 0.01694025106202584, 0.015882018440196603, 0.018922515952884716, 0.016179220653696195, 0.019106029215995697, 0.01760228043975025, 0.017574012290719084, 0.017171901110680718, 0.017250496762561063, 0.015436551181290085, 0.01745879474928449, 0.016052974102100007, 0.018582110398269208, 0.014889513371011352, 0.014895424968009297, 0.018993624882404043, 0.016664618569030648, 0.036606472844239006, 0.033074453580978026, 0.018212095416388477, 0.01703453786970051, 0.020453182627976633, 0.01899183777548946, 0.022055247870718747, 0.01767607698329993, 0.017514918999480676, 0.017845701456248822, 0.020713554037445844, 0.015453935439347326, 0.020914158864856213, 0.017356627269437954, 0.015422153019104117, 0.016972451317615874, 0.021275054803375743, 0.0012028037241820766, 0.020998392085324644, 0.028948761281384842, 0.011761428853065532, 0.025050670042482258, 0.02780578449214597, 0.022434195127656906, 0.029994132145664577, 0.017416247542326933, 0.03095362437099523, 0.02568942977650612, 0.04055704394571149, 0.02395567319543615, 0.02187419263838017]

feature_importance_4=[0.018029555269713348, 0.01657803020740227, 0.017254785987760205, 0.016033326901983606, 0.021660823654573523, 0.017478937731738767, 0.017519561573596326, 0.016893734741080545, 0.0162505995939322, 0.015579579573803577, 0.017127449132193794, 0.01800126024368288, 0.016091742632567893, 0.016935144470718245, 0.017546390925095606, 0.01550414047311957, 0.023429828483932855, 0.02137505173176056, 0.015563962133878877, 0.0372505910871447, 0.030826747190713016, 0.01832961242154947, 0.017139756913841207, 0.020908734241367327, 0.01921510533752863, 0.019508825786302676, 0.016480258072286827, 0.01742751119195087, 0.019602954092073754, 0.023059152196671085, 0.016168026502036352, 0.023710245363162668, 0.01746470661084014, 0.01573977104340797, 0.019884763898323596, 0.021222899758420743, 0.0012500078971084759, 0.01897592775919686, 0.03098571653644981, 0.01017425404477486, 0.025037954412756892, 0.026728989101613528, 0.020380832701018745, 0.024469068930709607, 0.01827811185482544, 0.029852205453299554, 0.024661761674369082, 0.039676318193157686, 0.022397929845129297, 0.018337354425434545]

df=pd.DataFrame({'Features': feature_list, 'feature_importance_0': feature_importance_0, 'feature_importance_1': feature_importance_1, 'feature_importance_2': feature_importance_2, 'feature_importance_3': feature_importance_3, 'feature_importance_4': feature_importance_4})
df['avg']=df.mean(axis=1)
df['sem']=df[['feature_importance_0','feature_importance_1', 'feature_importance_2','feature_importance_3','feature_importance_4']].sem(axis = 1) 
df.sort_values('avg',inplace=True)

print (df)


#plt.rcdefaults()
#fig, ax = plt.subplots()

# Example data

ax = df.plot.barh(x='Features', y='avg', xerr='sem', color='blue')


#ax.barh(y_pos, performance, xerr='sem', align='center')
#ax.set_xlim(0, 0.2)
ax.set_xlabel('Feature Importance (5X Cross-Validation)')
ax.set_title('Random Forest Feature Importance', fontweight='bold')
plt.grid(b=None)

plt.show()
